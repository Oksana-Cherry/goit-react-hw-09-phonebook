{"version":3,"sources":["pages/Page.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/ContactsPage.js"],"names":["module","exports","ContactForm","useState","name","setName","number","setNumber","inputRef","useRef","contacts","useSelector","contactsSelectors","getContacts","dispatch","useDispatch","useEffect","current","focus","className","styles","Forms","onSubmit","e","preventDefault","alert","find","contact","contactsOperations","addContact","Form_label","Form_input","ref","type","required","placeholder","value","onChange","target","pattern","Form_button","ContactListItem","id","onDelete","List_item","List_button","onClick","ContactList","getVisibleContact","useCallback","deleteContact","length","List","map","Filter","filter","getFilter","event","changeFilterName","Title","Title_input","ContactsPage","isLoading","getLoding","Error","getError","fetchContact","Container","container_contact","color","height","width"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,MAAQ,oBAAoB,eAAiB,6BAA6B,KAAO,mBAAmB,MAAQ,oBAAoB,kBAAoB,kC,oBCA1MD,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,WAAa,gCAAgC,WAAa,gCAAgC,UAAY,+BAA+B,YAAc,mC,oBCAxMD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,UAAY,+BAA+B,YAAc,mC,oBCA5GD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,YAAc,8B,oJCO/C,SAASC,IAAe,IAAD,EAEZC,mBAAS,IAFG,mBAE7BC,EAF6B,KAEvBC,EAFuB,OAGRF,mBAAS,IAHD,mBAG7BG,EAH6B,KAGrBC,EAHqB,KAI9BC,EAAWC,iBAAO,MAElBC,EAAWC,YAAYC,IAAkBC,aACzCC,EAAWC,cAEjBC,qBAAU,WACRR,EAASS,QAAQC,UAChB,IAiEH,OACE,uBAAMC,UAAWC,IAAOC,MAAOC,SAjChB,SAAAC,GAGf,GAFAA,EAAEC,kBAEGpB,IAASE,EAIZ,OAHAmB,MAAM,uBACNpB,EAAQ,IACRE,EAAU,KACH,EAQcG,EAASgB,MAAK,SAAAC,GAAO,OAAIA,EAAQvB,OAASA,KAI/DqB,MAAM,GAAD,OAAIrB,EAAJ,gCAFLU,EAASc,IAAmBC,WAAWzB,EAAME,IAK/CD,EAAQ,IACRE,EAAU,KAUV,UACE,wBAAOY,UAAWC,IAAOU,WAAzB,iBAEE,uBACEX,UAAWC,IAAOW,WAClBC,IAAKxB,EACLyB,KAAK,OACL7B,KAAK,OACJ8B,UAAQ,EACTC,YAAY,GACZC,MAAOhC,EACPiC,SA/DiB,SAAAd,GACvBlB,EAAQkB,EAAEe,OAAOF,aAiEf,wBAAOjB,UAAWC,IAAOU,WAAzB,mBAEE,uBACEX,UAAWC,IAAOW,WAClBE,KAAK,MACL7B,KAAK,SACLgC,MAAO9B,EACN4B,UAAQ,EACTC,YAAY,YACXI,QAAQ,6BACTF,SAzEmB,SAAAd,GACzBhB,EAAUgB,EAAEe,OAAOF,aA2EjB,wBAAQjB,UAAWC,IAAOoB,YAAaP,KAAK,SAA5C,4B,8BC1GAQ,EAAkB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,GAAItC,EAA6B,EAA7BA,KAAME,EAAuB,EAAvBA,OAAQqC,EAAe,EAAfA,SAC3C,OACE,qBAAIxB,UAAWC,IAAOwB,UAAtB,UACE,4BAAIxC,EAAO,KAAOE,IAClB,wBAAQa,UAAWC,IAAOyB,YAAaC,QAAS,kBAAMH,EAASD,IAA/D,sBAFoCA,IAY3B,SAASK,IACtB,IAAMrC,EAAWC,YAAYC,IAAkBoC,mBACzClC,EAAWC,cAEX4B,EAAWM,uBACf,SAAAP,GAAE,OAAI5B,EAASc,IAAmBsB,cAAcR,MAChD,CAAC5B,IAGH,OAAwB,IAApBJ,EAASyC,OAAqB,KAGhC,oBAAIhC,UAAWC,IAAOgC,KAAtB,SACG1C,EAAS2C,KAAI,SAAA1B,GAAO,OACnB,cAAC,EAAD,2BAAsCA,GAAtC,IAA+CgB,SAAUA,IAAnChB,EAAQe,S,sBCzBvB,SAASY,IACtB,IAAMC,EAAS5C,YAAYC,IAAkB4C,WACvC1C,EAAWC,cAEXsB,EAAWY,uBACf,SAAAQ,GACE3C,EAAS4C,YAAiBD,EAAMnB,OAAOF,UAEzC,CAACtB,IAEH,OACE,wBAAOK,UAAWC,IAAOuC,MAAzB,kCAEE,uBACExC,UAAWC,IAAOwC,YAClB3B,KAAK,OACL7B,KAAK,SACLgC,MAAOmB,EACPlB,SAAUA,O,iDCNH,SAASwB,IACtB,IAAMC,EAAYnD,YAAYC,IAAkBmD,WAC1CC,EAAQrD,YAAYC,IAAkBqD,UACtCnD,EAAWC,cAajB,OAXAC,qBAAU,WACRF,EAASc,IAAmBsC,kBAC3B,CAACpD,IAUF,eAACqD,EAAA,EAAD,CAAWhD,UAAWC,IAAOgD,kBAA7B,UACE,gCACE,2CAEA,cAAClE,EAAD,OAEF,gCACE,0CAEA,cAACoD,EAAD,IAEA,cAACP,EAAD,IACCe,GACC,cAAC,IAAD,CACE7B,KAAK,YACLoC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPpD,UAAU,cAIf6C,GAAS","file":"static/js/4.257d339b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Page_container__2G14m\",\"title\":\"Page_title__3QmcR\",\"homepage_image\":\"Page_homepage_image__xdbFr\",\"form\":\"Page_form__2K8JH\",\"label\":\"Page_label__3PNq8\",\"container_contact\":\"Page_container_contact__3ODpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Forms\":\"ContactForm_Forms__3i3wM\",\"Form_label\":\"ContactForm_Form_label__2_Nbx\",\"Form_input\":\"ContactForm_Form_input__33uti\",\"Forminput\":\"ContactForm_Forminput__3xQ_r\",\"Form_button\":\"ContactForm_Form_button__1fO1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__MJT0g\",\"List_item\":\"ContactList_List_item__3vrv6\",\"List_button\":\"ContactList_List_button__2MLdp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Filter_Title__3mdc7\",\"Title_input\":\"Filter_Title_input__3cwb8\"};","//import React, { Component } from 'react';\r\n//import { connect } from 'react-redux';\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  \r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const inputRef = useRef(null);\r\n\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, []);\r\n  /*class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };*/\r\n\r\n  /*handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };*/\r\n\r\n  const handleNameChange = e => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleNumberChange = e => {\r\n    setNumber(e.target.value);\r\n  };\r\n  /*handleSubmit = event => {\r\n    const { name, number } = this.state;\r\n    const { contacts, onSubmit } = this.props;\r\n\r\n    event.preventDefault();*/\r\n  /*onSubmit(name, number);\r\n    if (!name || !number) {\r\n      alert(`Some field is empty`);\r\n\r\n      return false;\r\n    }\r\n    this.setState({ name: '', number: '' });\r\n  };*/\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (!name || !number) {\r\n      alert(`Some field is empty`);\r\n      setName('');\r\n      setNumber('');\r\n      return false;\r\n    }\r\n    /*const isExistContact = contacts.find(contact => contact.name === name);\r\n\r\n    if (isExistContact !== undefined) {\r\n      alert(`${name}is already in the Phonebook`);\r\n      return;\r\n    }*/\r\n    const isExistContact = contacts.find(contact => contact.name === name);\r\n    if (!isExistContact ){\r\n      dispatch(contactsOperations.addContact(name, number));\r\n    } else {\r\n      alert(`${name}is already in the Phonebook`);\r\n    }\r\n    \r\n    setName('');\r\n    setNumber('');\r\n    \r\n  };\r\n\r\n\r\n  //resetForm = () => this.setState(this.state);\r\n\r\n  /*render() {\r\n    const { name, number } = this.state;*/\r\n  return (\r\n    <form className={styles.Forms} onSubmit={onSubmit}>\r\n      <label className={styles.Form_label}>\r\n        Name\r\n        <input\r\n          className={styles.Form_input}\r\n          ref={inputRef}\r\n          type=\"text\"\r\n          name=\"name\"\r\n           required\r\n          placeholder=\"\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n        />\r\n      </label>\r\n      <label className={styles.Form_label}>\r\n        Number\r\n        <input\r\n          className={styles.Form_input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n           required\r\n          placeholder=\"111-11-11\"\r\n           pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n          onChange={handleNumberChange}\r\n        />\r\n      </label>\r\n      <button className={styles.Form_button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n/*const mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(contactsOperations.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);*/\r\n","//import { connect } from 'react-redux';\r\nimport { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactListItem = ({ id, name, number, onDelete }) => {\r\n  return (\r\n    <li className={styles.List_item} key={id}>\r\n      <p>{name + ': ' + number}</p>\r\n      <button className={styles.List_button} onClick={() => onDelete(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\n/*onst ContactList = ({ contacts, onDelete }) => {\r\n  //console.log('contacts', contacts);*/\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(contactsSelectors.getVisibleContact);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDelete = useCallback(\r\n    id => dispatch(contactsOperations.deleteContact(id)),\r\n    [dispatch],\r\n  );\r\n\r\n  if (contacts.length === 0) return null;\r\n\r\n  return (\r\n    <ul className={styles.List}>\r\n      {contacts.map(contact => (\r\n        <ContactListItem key={contact.id} {...contact} onDelete={onDelete} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\n/*const mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getVisibleContact(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: id => dispatch(contactsOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);*/\r\n","//import { connect } from 'react-redux';\r\n//import PropTypes from 'prop-types';\r\nimport { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styles from './Filter.module.css';\r\nimport { contactsSelectors, changeFilterName } from '../../redux/contacts';\r\n\r\n//const Filter = ({ filter, onChange }) => {\r\n\r\nexport default function Filter() {\r\n  const filter = useSelector(contactsSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = useCallback(\r\n    event => {\r\n      dispatch(changeFilterName(event.target.value));\r\n    },\r\n    [dispatch],\r\n  );\r\n  return (\r\n    <label className={styles.Title}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.Title_input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\n/*const mapStateToProps = state => ({\r\n  filter: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(changeFilterName(e.target.value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);*/\r\n","//import React, { Component } from 'react';\r\n//import { connect } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Container from '../components/Container';\r\nimport ContactForm from '../components/ContactForm';\r\nimport ContactList from '../components/ContactList/';\r\nimport Filter from '../components/Filter';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport { contactsSelectors, contactsOperations } from '../redux/contacts';\r\nimport styles from './Page.module.css';\r\n\r\n/*const styles = {\r\n  container_contact: {\r\n    display: 'flex',\r\n    alignItems: 'flex-end',\r\n    marginBottom: 20,\r\n  },\r\n};*/\r\n//}\r\nexport default function ContactsPage() {\r\n  const isLoading = useSelector(contactsSelectors.getLoding);\r\n  const Error = useSelector(contactsSelectors.getError);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContact());\r\n  }, [dispatch]);\r\n\r\n  /*class ContactsPage extends Component {\r\n    componentDidMount() {\r\n      this.props.fetchContact();\r\n    }*/\r\n\r\n  //render() {\r\n\r\n  return (\r\n    <Container className={styles.container_contact}>\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n\r\n        <ContactForm />\r\n      </div>\r\n      <div>\r\n        <h2>Contacts</h2>\r\n\r\n        <Filter />\r\n\r\n        <ContactList />\r\n        {isLoading && (\r\n          <Loader\r\n            type=\"ThreeDots\"\r\n            color=\"#303f9f\"\r\n            height={80}\r\n            width={80}\r\n            className=\"Loader\"\r\n          />\r\n        )}\r\n      </div>\r\n      {Error && <h1>No result found!</h1>}\r\n    </Container>\r\n  );\r\n}\r\n\r\n/*const mapStateToProps = state => ({\r\n  isLoading: contactsSelectors.getLoding(state),\r\n  error: contactsSelectors.getError(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContact: () => dispatch(contactsOperations.fetchContact()),\r\n});*/\r\n\r\n//export default connect(mapStateToProps, mapDispatchToProps)(ContactsPage)\r\n"],"sourceRoot":""}